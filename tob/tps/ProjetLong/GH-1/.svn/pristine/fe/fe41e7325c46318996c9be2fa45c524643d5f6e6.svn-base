package Carte.Modele;

import Carte.VC.CarteVue;

import javax.swing.*;
import java.util.HashSet;
import java.util.Objects;
import java.util.Set;

public class CarteSimple implements Carte {

    private final Set<LieuCarte> accessibles;
    private final Set<LieuCarte> inaccessibles;
    private final ImageIcon image;
    static final String REL_PATH_TO_IMAGE = "res/carte.jpg";

    /**
     * Créer une carte.
     * La carte possède des lieux accessibles et inaccessibles
     * @param accessibles Ensemble des zones accessibles. Peut être mis null.
     * @param inaccessibles Ensembles des zones inaccessibles. Peut être mis null.
     */
    public CarteSimple(Set<LieuCarte> accessibles, Set<LieuCarte> inaccessibles){
        this.accessibles = Objects.requireNonNullElseGet(accessibles, HashSet::new);
        this.inaccessibles = Objects.requireNonNullElseGet(inaccessibles, HashSet::new);
        image = new ImageIcon(Objects.requireNonNull(this.getClass().getResource(REL_PATH_TO_IMAGE)));
    }


    @Override
    public ImageIcon getImage() {
        return image;
    }

    @Override
    public int getX() {
        return 0;
    }

    @Override
    public int getY() {
        return 0;
    }

    @Override
    public int getLargeur() {
        return CarteVue.LARGEUR;
    }

    @Override
    public int getHauteur() {
        return CarteVue.HAUTEUR;
    }

    @Override
    public String getNom() {
        return null;
    }

    @Override
    public Set<LieuCarte> getLieuxAccessibles() {
        return accessibles;
    }

    @Override
    public Set<LieuCarte> getLieuxInaccessibles() {
        return inaccessibles;
    }

    @Override
    public void ajouterLieuAccessible(LieuCarte accessible) {
        this.inaccessibles.remove(accessible);
        this.accessibles.add(accessible);
    }

    @Override
    public void ajouterZoneInaccessible(LieuCarte inaccessible) {
        this.accessibles.remove(inaccessible);
        this.inaccessibles.add(inaccessible);
    }
}
