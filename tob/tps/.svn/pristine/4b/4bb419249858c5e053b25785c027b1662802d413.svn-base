File allumettes/Arbitre.java: 539 tokens, 134 lines
File allumettes/CoupInvalideException.java: 68 tokens, 39 lines
File allumettes/Joueur.java: 74 tokens, 38 lines
File allumettes/ConfigurationException.java: 21 tokens, 16 lines
File allumettes/Proxy.java: 66 tokens, 23 lines
File allumettes/ClassJeu.java: 110 tokens, 33 lines
File allumettes/Jouer.java: 417 tokens, 100 lines
File allumettes/Jeu.java: 23 tokens, 22 lines
File allumettes/Tricheur.java: 28 tokens, 9 lines
File allumettes/Expert.java: 102 tokens, 41 lines
File allumettes/Rapide.java: 54 tokens, 20 lines
File allumettes/Humain.java: 61 tokens, 24 lines
File allumettes/Strategie.java: 13 tokens, 7 lines (not NL-terminated)
File allumettes/Naif.java: 75 tokens, 23 lines
Total input: 14 files (14 new, 0 old), 1651 tokens

allumettes/Jouer.java: line 75-79 [33]
allumettes/Jouer.java: line 81-87
< 		if (chaine.contains("humain")) {
< 			return new Humain();
< 		} else if (chaine.contains("naif")) {
< 			return new Naif();
< 		}
---
> 		else if (chaine.contains("rapide")) {
> 			return new Rapide();
> 		}
> 
> 		else if (chaine.contains("expert")) {
> 			return new Expert();
> 		}

allumettes/Arbitre.java: line 1-19 [33]
allumettes/Joueur.java: line 1-15
< package allumettes;
< 
< import allumettes.Strategie;
< 
< public class Arbitre {
< 
< 	private Joueur j1; // Joueur1
< 	private Joueur j2; // Joueur2
< 
< 	/**
< 	 * Construire un arbitre à partir de son nom.
< 	 * 
< 	 * @param Joueur1 le joueur 1
< 	 * @param Joueur2 le joueur 2
< 	 */
< 	public Arbitre(Joueur Joueur1, Joueur Joueur2) {
< 		this.j1 = Joueur1;
< 		this.j2 = Joueur2;
< 	}
---
> package allumettes;
> import allumettes.Strategie;
> 
> public class Joueur {		
> 	private String Nom;	//Nom du joueur	
> 
>     private Strategie Strategie; //Stratégie du joueur
> 
> 	/** Construire un joueur à partir de son nom.
> 	 * @param NomDonne le nom du joueur
> 	 */
> 	public Joueur(String NomDonne, Strategie StrategieDonnee) {
> 		this.Nom = NomDonne;
> 		this.Strategie = StrategieDonnee;
> 	}

allumettes/Arbitre.java: line 70-73 [31]
allumettes/Arbitre.java: line 80-83
< 			if (prob == "(< 1)") {
< 				System.out.println(str_imp + prise + " " + prob +"\n" );
< 				FaireJouer(joueur, jeu);
< 			}
---
> 			if (prob == "NbAl") {
> 				System.out.println(str_imp + coup + " (> " + NombreAllu + ")\n");
> 				FaireJouer(joueur, jeu);
> 			}

allumettes/Rapide.java: line 1-9 [26]
allumettes/Naif.java: line 1-10
< package allumettes;
< 
< public class Rapide implements Strategie {
< 	
< 	/** Obtenir le nombre d'allumettes que le joueur veut prendre.
< 	 * @return le nombre d'allumettes que le joueur veut prendre */
< 	@Override
<     public int getPrise(Jeu jeu) {
< 		int AlRestantes = jeu.getNombreAllumettes();
---
> package allumettes;
> import java.util.Random;
> 
> public class Naif implements Strategie {
> 
> 	/** Obtenir le nombre d'allumettes que le joueur veut prendre.
> 	 * @return le nombre d'allumettes que le joueur veut prendre */
> 	@Override
>     public int getPrise(Jeu jeu) {
> 		int alRestantes = jeu.getNombreAllumettes();

