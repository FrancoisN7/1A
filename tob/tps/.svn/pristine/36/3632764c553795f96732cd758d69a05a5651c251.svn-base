Date de l'évaluation : jeu. 10 mars 2022 19:50:32 CET

!!! Il est interdit de changer ConfigurationException.java (voir evaluations/evaluation1/ConfigurationException.java.diff)
!!! Il est interdit de changer CoupInvalideException.java (voir evaluations/evaluation1/CoupInvalideException.java.diff)

Nombre de similitudes (voir evaluations/evaluation1/sim_java.txt) : 5
Les similitudes indiquent généralement du code à restructurer.

Erreurs checkstyle (différentes/types) : 43/13	(voir evaluations/evaluation1//checkstyle.log)

Classe OperationInterditeException : OperationInterditeException (ok)

Procuration sur le jeu réel : allumettes/Proxy.java (ok)

OperationInterditeException, levée dans : allumettes/Proxy.java (ok)
OperationInterditeException, récupérée dans : allumettes/Arbitre.java (ok)

Throwable, Exception et RuntimeException ne devraient pas être récupérées car trop générales... ok

AssertionError ne doit pas être récupérée... ok

Autres exceptions récupérées :
  | allumettes/Arbitre.java:94:         } catch (CoupInvalideException e) {
  | allumettes/Arbitre.java:114:        } catch (
  | allumettes/Jouer.java:51:       } catch (ConfigurationException e) {
  | allumettes/Tricheur.java:10:            } catch (CoupInvalideException e) {
  | allumettes/Humain.java:19:      } catch (InputMismatchException e) {

Utilisation de 'Scanner' : ok
  | allumettes/Humain.java:7:   Scanner saisieUtilisateur = new Scanner(System.in);

Utilisation de 'split' : ok
  | allumettes/Jouer.java:117:      return (args.split("@"));

Utilisation de 'Random' : ok
  | allumettes/Naif.java:3:import java.util.Random;
  | allumettes/Naif.java:16:        Random aleatoire = new Random();

Utilisation de '3' : Ne pas utiliser de constante littérale hors -1, 0 ou 1 (peut-être PRISE_MAX ?)
  |     allumettes/Arbitre.java:83:         } else if (prise == 2 || prise == 3 && prise <= NombreAllu) {
  |     allumettes/Jouer.java:79:       if (args.length == 3) {
  |     allumettes/Expert.java:16:      // ex pour PRISE_MAX = 3 ,
  |     allumettes/Naif.java:18:            prise = aleatoire.nextInt(Jeu.PRISE_MAX) + 1; // Générer un nombre entre 1 et 3

Affichage de 'Impossible !' : ok

Utilisation de 'System.exit' : ok

Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.
Compilation de HumainTest.java : OK.
Test exemplePresqueSujet : NON CONFORME (voir evaluations/evaluation1/exemplePresqueSujet.diff)
Test exempleTricheurSujet : NON CONFORME (voir evaluations/evaluation1/exempleTricheurSujet.diff)
Test exempleConfiantTricheurSujet : NON CONFORME (voir evaluations/evaluation1/exempleConfiantTricheurSujet.diff)
Test exempleRobustesse : NON CONFORME (voir evaluations/evaluation1/exempleRobustesse.diff)
Test exempleHumainTricheurExpert : NON CONFORME (voir evaluations/evaluation1/exempleHumainTricheurExpert.diff)
Test exempleMaxLou : NON CONFORME (voir evaluations/evaluation1/exempleMaxLou.diff)
Test exempleRapideRapide : ok
Test exempleTricheurExpert : ok

Test RobustesseTest : Tests run: 25,  Failures: 10	(voir evaluations/evaluation1/RobustesseTest.log)
    1) testerStrategieDoubleAtSymetrieConfiant(RobustesseTest)
        AssertionError
    2) testerStrategieInconnueSymetrieConfiant(RobustesseTest)
        AssertionError
    3) testerStrategieDoubleAtStrategieALaFinSymetrie(RobustesseTest)
        AssertionError
    4) testerStrategieDoubleAtStrategieALaFinSymetrieConfiant(RobustesseTest)
        AssertionError
    5) testerStrategieInconnueSymetrie(RobustesseTest)
        AssertionError
    6) testerSansStrategieSymetrie(RobustesseTest)
        AssertionError
    7) testerSansStrategieSymetrieConfiant(RobustesseTest)
        AssertionError
    8) testerNomNonDefiniSymetrieConfiant(RobustesseTest)
        AssertionError
    9) testerStrategieDoubleAtSymetrie(RobustesseTest)
        AssertionError
    10) testerNomNonDefiniSymetrie(RobustesseTest)
        AssertionError


On recommence avec les classes/interfaces fournies : Jeu ConfigurationException CoupInvalideException
Compilation de Jouer.java : OK.
Compilation de Arbitre.java : OK.

Vérification du respect du diagramme de classe...
Test FormeTest : OK (2 tests)	(voir evaluations/evaluation1/FormeTest.log)

Compilation de HumainTest.java : OK.
Test allumettes.HumainTest : Tests run: 1,  Failures: 1	(voir evaluations/evaluation1/allumettes.HumainTest.log)
    1) initializationError(allumettes.HumainTest)
        Exception: No runnable methods

